网络
	
	终端利用应用程序实现资源共享。

协议 Protocol:
 
	数据在网络间穿行时遵守的规则。
	Enternet ARP 
	IPV4/IPV6 ICMP DHCP NAPT 
	
协议栈
	
	由多条协议组成的一组协议

ISO
	国际准化组织 OSI  参考模型
	
思科路由器系统：IOS
华为路由器系统：VRP  CLI命令操作系统 GUI桌面操作系统

OSI七层模型

		|-------------------|
	7	|		应用层		|--------------为应用程序提供网络服务
		|-------------------|
		|-------------------|
	6	|		表示层		|--------------数据格式化,加密,解密
		|-------------------|
		|-------------------|
	5	|		会话层		|--------------建立,维护,管理会话连接
		|-------------------|
		|-------------------|
	4	|		传输层		|--------------建立,维护,管理端到端连接
		|-------------------|
		|-------------------|
	3	|		网络层		|--------------IP选址和路由选择
		|-------------------|
		|-------------------|
	2	|		数据链路层	|--------------控制网络层于物理层之间通信，设备 Switch
		|-------------------|
		|-------------------|
	1	|		物理层		|--------------比特流传输 设备各种网线，HUB
		|-------------------|
		
	.下层为上层服务。
	
	注意:	应用层可不是应用程序本身，两者完全是不同类的东西。
			应用层，只是个概念，规定了很多应用层的协议。
			通过这些应用层协议，可以使软件具备文件传输，电子邮件等功能，这是由具体的软件 按照具体的协议规则 来定义的。
			比如浏览网页，你看到的内容就是浏览器收到的数据，经过应用层 Http 协议解析处理，才显示出来。
			
			应用层是下层网络可向最终用户(用户/应用程序)提供应用服务的唯一窗口，其目的是支持最终用户(用户/应用程序)联网的应用的要求。
			由于最终用户(用户/应用程序)的要求不同，应用层含有支持不同应用的多种应用实体，提供多种应用服务，如电子邮件（MHS)、文件传输(FTAM)、虚拟终端(VT)、电子数据交换(EDI)等。

	上三层是操作系统层，由用户或者应用程序 按照应用层某个协议 生产数据，在 TCP/IP 中统称应用层 常用协议 Http。
	
	*协议是一种规则，协议本身不产生数据，协议是为网络中的两个应用程序之间通信所制定的规则。
	 应用程序是要准备某种协议的数据，发送前通过传输层和对端建立的连接，然后通过连接发送某种协议数据。
	
	应用层：为应用程序提供数据封装的规则，应用程序利用传输层网络连接收发数据，从而实现资源共享。         
			知名应用协议：使用知名端口号，范围1-1023。 HTTP( TCP 的80) FTP(数据连接 20，控制连接 21) TFTP（使用 UDP 底层的 69 端口） TELNET(23) SSH(22) SMTP（TCP 的 25 端口）。
			非知名应用协议：使用的端口号，范围 1024-65535。

	表示层：在应用层应程序传输之前，协商双方都能支持的数据表示格式，解决应用层在收发数据前，是否能看的懂的问题，
			现在应用都是跨平台的， 苹果,安卓,Windows，比如 HTTP 协议的 Charset 字符集编码，压缩，加密等等找到双方都支持的数据格式。
			比如网页字符集，系统接受二进制数据流用大端存储，还是小端存储。

	会话层：会话层建立的是一个会话连接，客户端的一个程序连接服务端的一个程序，是一个虚拟连接，客户端和服务端的识别机制。
			这个会话就是一个身份标识，服务程序来识别客户端程序的。
			你可以理解成我要给你打电话，只需要用自己的手机拨打对方的电话号码就可以了。这个电话号码，在 HTTP 协议 中就是 Cookie 和 Session。
			
			
	上面三层解决的是 应用程序 识别认识 应用程序 的事情，和下层是使用 TCP 协议，还是使用 UDP 协议毫无关系。
	如果应用程序基于 SMTP、TELNET、HTTP、FTP 协议开发，那下层就用 TCP，
	如果应用程序基于 DNS、TFTP,DHCP(动态主机配置) 协议开发，那下层就是 UDP。
	
	下层为上层提供的仅仅是按照协议规则封装数据的服务，其他毫不相关。
	浏览器应用程序，只是基于 应用层协议 HTTP 开发的软件。
	
	会话层建立，按照一种应用层协议 建立程序到程序的会话连接，会话连接和传输层的网络‘连接’完全是两码事。
	比如 浏览器基于 HTTP 协议 和 基于 HTTP 协议 的服务应用 建立会话，就是浏览器向服务器应用，发送一个 Cookie Request 
	这个 Request HTTP 数据包，被直接扔给了传输层，至于你传输层 是基于 TCP 协议，怎样帮我把 HTTP 数据包，传递到对端服务应用，这是你 TCP 的事，我一概不管。
	对端服务应用只要能给我 成功 Respone 一个 Cookie 就行。服务应用 收到一个 Request，查看携带 Cookie 的值，就能识别是那个客户端。
	
	HTTP 的 Request，Reply 模型 和 TCP 的 网络连接 完全是两码事。
	一个 HTTP Request/Reply 的数据包，向下交给 TCP 协议去切片传输，可能会建立一次连接，也可能建立多次连接(丢包，损坏，网络不稳等)。
				
	下四层是负责数据转发				
				
	传输控制层：4层(使用协议 TCP 和 UDP )根据 Ethernet MTU 最大 1500 Byte, MSS 最大尺寸发送方进行数据切片;接收方对数据进行重组。
				数据载荷前加4层报头，Layer4 Header|数据载荷(PDU),形成一个数据段 Segment，
				数据段报头源目端口号 Sport，Dport,源目端口号描述源目通信应用。
				负责端到端连接建立，重建，销毁等。

	网络层：3层(使用协议 IPV4 和 IPV6 ICMP),数据包格式 Layer3 Header|Layer4 Header|数据载荷 PDU，
			数据报头 SIP,DIP Internet Protacol  源目 IP 描述源目通信主机(网络)，
			Router 负责转发网络间的数据。

	数据链路层：2层(常用协议 Ethernet，PPP 和 HDLC )数据帧 Layer2 Header|Layer3 Header|Layer4 Header|数据载荷PDU|FCS  
				数据帧Frame SMAC DMAC 源目 MAC 还是用来描述 源目 通信主机。
				
				PCA----PCB SIP A ,DIP B; SMAC A,SMAC B.
				
				PCA--SW1---R1-----PCB SIP A,SIP B; SMAC A DMAC 
				R1 连接 A 的接口的 MAC 地址,  网关 Gateway 出口 拆掉二层帧头和帧尾，只有2层的目的 MAC 地址是网关自己的时候才能拆，
				网络间通信，源目 MAC 地址，每穿越一层网间设备都要改变一次
				Switch 负责转发网络内的数据，查询 CAN 表直接转发，一个网络就是一个广播域。
				PPP点到点的协议和 HDLC 高级数据链路控制，只有一个地址。

TCP/IP

	4应用层 5 6 7
	3主机到主机层 4
	2因特网层 3
	1网络接口层 1 2

	OSI逐层封装 必须包含中间三层

	TCP/IP 跃层封装 IETF组织接管了
	Enternet2|IPV4|TCP|HTTP|FCS 应用层协议 HTTP协议 
	Enternet2|IPV4|OSPF|FCS 	网络层协议 链路状态路由协议公有协议
	Enternet2|IPV4|EIGRP|FCS 	网络层协议 路由距离矢量协议 思科私有协议   
	Enternet2|ARP|FCS 			数据链路层协议 地址解析协议
	Enternet2|IPV4|UDP|RTP|VoIP|FCS 网络电话
 
	网络内和网络间通信各是什么？
	网络内：通信的源目主机在同一个广播域内，一个网络就是一个广播域，PCA----PCB 内网通信不用指网关，PC 能够独立完成内网通信 HUB SWITCH负责网络内的数据转发。
	网络间：经过3层网络设备MLS,Router,防火墙等的通信 Router 负责网络间的数据转发
 
	网关 Gateway ：就路由器连接一个网络的接口，也就是一个网络的出口 PCA--SW1---R1-----PCB R1的的左边接口就是 PCA 的网关